(()=>{"use strict";const e=class{constructor(e,t){this.parent=e,this.config=t}getParent(){return this.parent}getConfig(){return this.config}getForm(){if(void 0===this.form){this.form=null;let e=this;for(;e=e.getParent();)if(e instanceof s){this.form=e.getForm();break}}return this.form}onVisibilityChange(){this.getParent().onVisibilityChange()}getResult(){return void 0===this.result&&(this.result=this.evaluate()),this.result}bind(){window.formtacular_getFieldInputs(this.getForm(),this.getConfig()).forEach((e=>{window.formtacular_bindChangeEvent(e,(()=>this.handleInputChange()))}))}handleInputChange(){this.refresh()}refresh(){let e=this.evaluate();e!==this.result&&(this.result=e,this.onVisibilityChange())}evaluate(){const e=this.getConfig(),t=`formtacular_${e.test}`;return window[t](this.getForm(),e)}},t=class extends e{constructor(e,t){super(e,t),this.childRuleSet=new r(e,t)}bind(){this.childRuleSet.bind()}getResult(){return this.childRuleSet.getResult()}refresh(){this.childRuleSet.refresh()}},r=class{constructor(r,s){this.parent=r,this.config=s,this.rules=[],s.rules.forEach((r=>{r=r.rules?new t(this,r):new e(this,r),this.rules.push(r)}))}getParent(){return this.parent}getConfig(){return this.config}getType(){return this.config.type}getRules(){return this.rules}bind(){this.getRules().forEach((e=>{e.bind()}))}onVisibilityChange(){this.getParent().onVisibilityChange()}getResult(){let e="or"!==this.getType();return this.getRules().forEach((t=>{e="or"===this.getType()?e||t.getResult():e&&t.getResult()})),e}refresh(){this.getRules().forEach((e=>{e.refresh()}))}},s=class{constructor(e,t,s,i){this.form=e,this.holderElement=t,this.ruleSetConfig=s,this.initiallyVisible=i,this.ruleSet=new r(this,s),this.ruleSet.bind()}getForm(){return this.form}getHolderElement(){return this.holderElement}getRuleSetConfig(){return this.ruleSetConfig}getInitiallyVisible(){return this.initiallyVisible}getRuleSet(){return this.ruleSet}getIsVisible(){let e=this.getRuleSet().getResult();return this.getInitiallyVisible()&&(e=!e),e}onVisibilityChange(){this.getIsVisible()?this.holderElement.classList.remove("formtacular-hidden"):this.holderElement.classList.add("formtacular-hidden")}refresh(){this.getRuleSet().refresh()}},i={evaluateIsEqualTo:(e,t)=>window.formtacular_getFieldValue(e,t)===t.arguments[0],evaluateIsNotEqualTo:(e,t)=>window.formtacular_getFieldValue(e,t)!==t.arguments[0],evaluateIsChecked:(e,t)=>!!window.formtacular_getFieldValue(e,t),evaluateIsNotChecked:(e,t)=>!window.formtacular_getFieldValue(e,t),evaluateIsGreaterThan:(e,t)=>{let r=window.formtacular_getFieldValue(e,t);return null!==r&&parseFloat(r)>parseFloat(t.arguments[0])},evaluateIsLessThan:(e,t)=>{let r=window.formtacular_getFieldValue(e,t);return null!==r&&parseFloat(r)<parseFloat(t.arguments[0])},evaluateContains:(e,t)=>{const r=window.formtacular_getFieldValue(e,t);return"string"==typeof r&&r.contains(t.arguments[0])},evaluateIsEmpty:(e,t)=>{const r=window.formtacular_getFieldValue(e,t);return Array.isArray(r)?0===r.length:0===(r+"").trim().length},evaluateIsNotEmpty:(e,t)=>{const r=window.formtacular_getFieldValue(e,t);return Array.isArray(r)?r.length>0:0!==(r+"").trim().length},evaluateIsBetween:(e,t)=>{let r=window.formtacular_getFieldValue(e,t);return null!==r&&(r=parseFloat(r),r>parseFloat(t.arguments[0])&&r<parseFloat(t.arguments[1]))},evaluateHasCheckedOption:(e,t)=>{const r=window.formtacular_getFieldValue(e,t);return Array.isArray(r)&&r.includes(t.arguments[0])},evaluateHasNotCheckedOption:(e,t)=>{const r=window.formtacular_getFieldValue(e,t);return!Array.isArray(r)||!r.includes(t.arguments[0])},evaluateHasCheckedMoreThan:(e,t)=>{const r=window.formtacular_getFieldValue(e,t);return Array.isArray(r)&&r.length>t.arguments[0]},evaluateHasCheckedFewerThan:(e,t)=>{const r=window.formtacular_getFieldValue(e,t);return null===r||Array.isArray(r)&&r.length<t.arguments[0]}},l={bindChangeEvent:(e,t)=>{e.addEventListener("input",t),e.addEventListener("change",t)},forms:{_key:"formtacularForm",_storage:new WeakMap,set:function(e,t){this._storage.has(e)||this._storage.set(e,new Map),this._storage.get(e).set(this._key,t)},get:function(e){return this._storage.has(e)?this._storage.get(e).get(this._key):void 0},has:function(e){return this._storage.has(e)&&this._storage.get(e).has(this._key)},remove:function(e){return!!this._storage.has(e)&&this._storage.get(e).delete(this._key)&&this._storage.delete(e)}},getFieldHolder:(e,{fieldName:t,fieldID:r,holderID:s})=>{const i=e.getFormElement();return i.querySelector(`#${s}`)||i.querySelector(`#${r}`)||i.querySelector(`#${t}`)},getFieldInputs:(e,{fieldName:t,fieldID:r,holderID:s})=>{const i=e.getFormElement(),l=i.querySelector(`#${r}`);if(l)return[l];const n=i.querySelectorAll(`#${s} [name="${t}"]`);if(n.length)return n;const a=i.querySelectorAll(`[name="${t}"]`);if(a.length)return a;const o=i.querySelectorAll(`#${s} [name^="${t}"]`);return o.length?o:i.querySelectorAll(`[name^="${t}"]`)},getFieldValue:(e,t)=>{const r=new FormData(e.getFormElement());if(null!==r.get(t.fieldName))return r.get(t.fieldName);let s=null;for(const e of r.entries())e[0].startsWith(`${t.fieldName}[`)&&(s=s||[],s.push(e[1]));return s}};Object.keys(i).forEach((e=>{const t=`formtacular_${e}`;window[t]=window[t]||i[e]})),Object.keys(l).forEach((e=>{const t=`formtacular_${e}`;window[t]=window[t]||l[e]})),addEventListener("DOMContentLoaded",(e=>{document.querySelectorAll("form").forEach((e=>{if(!e.hasAttribute("data-formtacular-visibility"))return;const t=window.formtacular_forms,r=new class{constructor(e){this.formElement=e,this.rules=JSON.parse(e.getAttribute("data-formtacular-visibility"))||[],this.fields=[],this.rules.forEach((e=>{const t=window.formtacular_getFieldHolder(this,e);if(!t)return void console.error(`Field holder not found for field: ${e.fieldName}`);const r=new s(this,t,e.ruleset,e.initiallyVisible);this.fields.push(r)})),this.refresh()}getFormElement(){return this.formElement}getRules(){return this.rules}getFields(){return this.fields}refresh(){this.getFields().forEach((e=>{e.refresh()}))}}(e);t.set(e,r)}))}))})();