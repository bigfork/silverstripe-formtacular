(()=>{"use strict";const e=(e,t)=>{const r=e.getFormElement(),s=r.querySelector(`#${t.fieldID}`);if(s)return[s];const i=r.querySelectorAll(`#${t.holderID} [name="${t.fieldName}"]`);if(i.length)return i;const n=r.querySelectorAll(`[name="${t.fieldName}"]`);if(n.length)return n;const l=r.querySelectorAll(`#${t.holderID} [name^="${t.fieldName}"]`);return l.length?l:r.querySelectorAll(`[name^="${t.fieldName}"]`)},t=class{constructor(e,t){this.parent=e,this.config=t}getParent(){return this.parent}getConfig(){return this.config}getForm(){if(void 0===this.form){this.form=null;let e=this;for(;e=e.getParent();)if(e instanceof i){this.form=e.getForm();break}}return this.form}onVisibilityChange(){this.getParent().onVisibilityChange()}getResult(){return void 0===this.result&&(this.result=this.evaluate()),this.result}bind(){e(this.getForm(),this.getConfig()).forEach((e=>{window.formtacular_bindChangeEvent(e,(()=>this.handleInputChange()))}))}handleInputChange(){this.refresh()}refresh(){let e=this.evaluate();e!==this.result&&(this.result=e,this.onVisibilityChange())}evaluate(){const e=this.getConfig(),t=`formtacular_${e.test}`;return(0,window[t])(this.getForm(),e)}},r=class extends t{constructor(e,t){super(e,t),this.childRuleSet=new s(e,t)}bind(){this.childRuleSet.bind()}getResult(){return this.childRuleSet.getResult()}refresh(){this.childRuleSet.refresh()}},s=class{constructor(e,s){this.parent=e,this.config=s,this.rules=[],s.rules.forEach((e=>{e=e.rules?new r(this,e):new t(this,e),this.rules.push(e)}))}getParent(){return this.parent}getConfig(){return this.config}getType(){return this.config.type}getRules(){return this.rules}bind(){this.getRules().forEach((e=>{e.bind()}))}onVisibilityChange(){this.getParent().onVisibilityChange()}getResult(){let e="or"!==this.getType();return this.getRules().forEach((t=>{e="or"===this.getType()?e||t.getResult():e&&t.getResult()})),e}refresh(){this.getRules().forEach((e=>{e.refresh()}))}},i=class{constructor(e,t,r,i){this.form=e,this.holderElement=t,this.ruleSetConfig=r,this.initiallyVisible=i,this.ruleSet=new s(this,r),this.ruleSet.bind()}getForm(){return this.form}getHolderElement(){return this.holderElement}getRuleSetConfig(){return this.ruleSetConfig}getInitiallyVisible(){return this.initiallyVisible}getRuleSet(){return this.ruleSet}getIsVisible(){let e=this.getRuleSet().getResult();return this.getInitiallyVisible()&&(e=!e),e}onVisibilityChange(){this.getIsVisible()?this.holderElement.classList.remove("formtacular-hidden"):this.holderElement.classList.add("formtacular-hidden")}refresh(){this.getRuleSet().refresh()}},n=(e,t)=>{const r=e.getFormElement();return r.querySelector(`#${t.holderID}`)||r.querySelector(`#${t.fieldID}`)||r.querySelector(`#${t.fieldName}`)},l=(e,t)=>{const r=new FormData(e.getFormElement());if(null!==r.get(t.fieldName))return r.get(t.fieldName);let s=null;for(const e of r.entries())e[0].startsWith(t.fieldName)&&(s=s||[],s.push(e[1]));return s},a={evaluateIsEqualTo:(e,t)=>l(e,t)===t.arguments[0],evaluateIsNotEqualTo:(e,t)=>l(e,t)!==t.arguments[0],evaluateIsChecked:(e,t)=>!!l(e,t),evaluateIsNotChecked:(e,t)=>!l(e,t),evaluateIsGreaterThan:(e,t)=>{let r=l(e,t);return null!==r&&parseFloat(r)>parseFloat(t.arguments[0])},evaluateIsLessThan:(e,t)=>{let r=l(e,t);return null!==r&&parseFloat(r)<parseFloat(t.arguments[0])},evaluateContains:(e,t)=>{const r=l(e,t);return"string"==typeof r&&r.contains(t.arguments[0])},evaluateIsEmpty:(e,t)=>{const r=l(e,t);return Array.isArray(r)?0===r.length:0===(r+"").trim().length},evaluateIsNotEmpty:(e,t)=>{const r=l(e,t);return Array.isArray(r)?r.length>0:0!==(r+"").trim().length},evaluateIsBetween:(e,t)=>{let r=l(e,t);return null!==r&&(r=parseFloat(r),r>parseFloat(t.arguments[0])&&r<parseFloat(t.arguments[1]))},evaluateHasCheckedOption:(e,t)=>{const r=l(e,t);return Array.isArray(r)&&r.includes(t.arguments[0])},evaluateHasCheckedMoreThan:(e,t)=>{const r=l(e,t);return Array.isArray(r)&&r.length>t.arguments[0]},evaluateHasCheckedFewerThan:(e,t)=>{const r=l(e,t);return Array.isArray(r)&&r.length<t.arguments[0]}},o={bindChangeEvent:(e,t)=>{e.addEventListener("input",t),e.addEventListener("change",t)},forms:{_key:"formtacularForm",_storage:new WeakMap,set:function(e,t){this._storage.has(e)||this._storage.set(e,new Map),this._storage.get(e).set(this._key,t)},get:function(e){return this._storage.has(e)?this._storage.get(e).get(this._key):void 0},has:function(e){return this._storage.has(e)&&this._storage.get(e).has(this._key)},remove:function(e){return!!this._storage.has(e)&&this._storage.get(e).delete(this._key)&&this._storage.delete(e)}},getFieldHolder:n,getFieldInputs:e,getFieldValue:l};Object.keys(a).forEach((e=>{const t=`formtacular_${e}`;window[t]=window[t]||a[e]})),Object.keys(o).forEach((e=>{const t=`formtacular_${e}`;window[t]=window[t]||o[e]})),addEventListener("DOMContentLoaded",(e=>{document.querySelectorAll("form").forEach((e=>{if(!e.hasAttribute("data-formtacular-visibility"))return;const t=window.formtacular_forms,r=new class{constructor(e){this.formElement=e,this.rules=JSON.parse(e.getAttribute("data-formtacular-visibility"))||[],this.fields=[],this.rules.forEach((e=>{const t=n(this,e);if(!t)return void console.error(`Field holder not found for field: ${e.fieldName}`);const r=new i(this,t,e.ruleset,e.initiallyVisible);this.fields.push(r)}))}getFormElement(){return this.formElement}getRules(){return this.rules}getFields(){return this.fields}refresh(){this.getFields().forEach((e=>{e.refresh()}))}}(e);t.set(e,r)}))}))})();